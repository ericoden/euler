/*
The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred 
divisors?
*/

#include <iostream>

int getNumFactors(int n) {

    int result = 0;

    int half = n / 2;

    for (int i = 1; i <= half; i++) {
        if (n % i == 0){
            result++;
        }
    }
    result++; // also include n as a divisor
    return result;
}
int main() {
    bool flag = false;
    int i = 1;
    int triangle_number = 0;
    int num_factors = 0;
    int threshold = 200;
    while (flag == false) {
        triangle_number = triangle_number + i;
        num_factors = getNumFactors(triangle_number);
        //std::cout << i << " " << triangle_number << " " << num_factors << std::endl;
        if (num_factors > threshold) {
            flag = true;
        }
        i++;
    }
    std::cout << i - 1 << " " << triangle_number << " " << num_factors << std::endl;

    return 0;
}